[metadata]
name = {PACKAGE_NAME}
version = 0.0.1
author={AUTHOR_NAME}
author_email="Laugesen" <laugesen@email.com>
author_email="{AUTHOR_NAME}" <{AUTHOR_EMAIL}>
url={GIT_URL}
description = {DESCRIPTION}
long_description= file: README.md
long_description_content_type = text/markdown
license = MIT
license_files = LICENSE
classifiers = License :: OSI Approved :: MIT License

[options]
package_dir = 
    =src
packages = find:
include_package_data = True
python_requires= >=3.4
# Equivalent of requirements.txt
#install_requires =
#    termcolor>=1.1.0,<2

[options.packages.find]
where = src
exclude = 
    test*

[options.entry_points]
# Script to be able to run on command line
# Example:
#console_scripts =
#    harmony = impkg.harmony:main

[tool:pytest]
testpaths = test
addopts = --cov

[coverage:run]
branch = True
source = impkg

[coverage:report]
show_missing = True
skip_covered = True

# Sets the coverage for pytest testing
#[coverage:paths]
#source = 
#    src/impkg
#    */site-packages/impkg

[tox:tox]
isolated_build = True

[testenv]
commands = pytest {posargs}
deps = 
    pytest
    pytest-cov
    pytest-randomly


# tox environment for type checking
[testenv:typecheck]
deps = 
    pytest
    mypy
    types-termcolor

#
commands = 
    mypy --ignore-missing-imports {posargs:src test}

[mypy]
warn_unused_configs=True
show_error_context=True
pretty=True
namespace_packages=True
check_untyped_defs=True

[testenv:format]
skip_installs=True
deps =
    black

commands = 
    black {posargs:--check --diff src test}

[testenv:lint]
skip_installs=True
deps = 
    flake8
    flake8-bugbear

commands =
    flake8 {posargs:src test}

[flake8]
max-line-length=120

